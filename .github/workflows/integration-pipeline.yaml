# .github/workflows/build_and_push.yaml
name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    #   - 'cheetahs/*'
    # paths:
    #   - frontend/cc-blp-react/**
    #   - integration/pipelines/build_and_deploy_blp_react.yaml

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      YARN_CACHE_FOLDER: ${{ github.workspace }}/.yarn
      DOCKER_CACHE_FOLDER: ${{ github.workspace }}/docker
      DLCM_CC_BLUEPRINTS_PATH: ${{ github.workspace }}/frontend
      BLP_REACT_ROOT: ${{ github.workspace }}/frontend/cc-blp-react

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: s

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.YARN_CACHE_FOLDER }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build Blp react
        run: |
          cd ${{ env.BLP_REACT_ROOT }}
          yarn cache clean
          yarn install --force
          yarn build
          git log

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.BLP_REACT_ROOT }}
          file: ${{ env.BLP_REACT_ROOT }}/Dockerfile
          push: true
          tags: ${{ secrets.ACR_REGISTRY_LOGIN_SERVER }}/dlcm/cc_blp_react:latest
